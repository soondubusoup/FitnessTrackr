{"ast":null,"code":"var _jsxFileName = \"/Users/soondubu/Desktop/FitnessTrackr/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams, useHistory } from 'react-router';\nimport { register, login } from '../util/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  fetchUserRoutines,\n  setToken,\n  setUserName,\n  setUserId\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [verPass, setVerPass] = useState('');\n  const [error, setError] = useState('');\n  const params = useParams();\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-header\",\n        children: params.method === 'register' ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"header\",\n          children: \"Register a new account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"header\",\n          children: \"Login to your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: async e => {\n          e.preventDefault();\n\n          try {\n            const response = await callApi({\n              url: `/users/${params.method}`,\n              method: 'POST',\n              body: {\n                username,\n                password\n              }\n            });\n\n            if (response.error) {\n              setError(response.error);\n            }\n\n            ;\n\n            if (response.token) {\n              const {\n                token\n              } = response;\n              setToken(token);\n              localStorage.setItem('token', token);\n              const user = await callApi({\n                url: '/users/me',\n                token\n              });\n\n              if (user) {\n                setUserName(user.username);\n                localStorage.setItem('username', user.username);\n                setUserId(user.id);\n                localStorage.setItem('userId', user.id);\n                await fetchUserRoutines();\n                setUsername('');\n                setPassword('');\n                history.push('/user/routines');\n              }\n            }\n          } catch (error) {\n            console.error(error);\n          }\n\n          ;\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"input-fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"User name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-field\",\n            type: \"text\",\n            name: \"Login Name\",\n            placeholder: \"enter your user name\",\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"input-fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-field\",\n            type: \"password\",\n            name: \"Password\",\n            placeholder: \"password (min length 6 chars)\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), params.method === 'register' ? /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"input-fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Verify Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-field\",\n            type: \"password\",\n            name: \"Verify Password\",\n            placeholder: \"re-enter your password\",\n            onChange: e => setVerPass(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 23\n        }, this) : '', params.method === 'register' ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          type: \"submit\",\n          disabled: !password || !username || password.length < 8 || password !== verPass,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          type: \"submit\",\n          disabled: !password || !username || password.length < 8,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }, this), params.method === 'register' && password !== verPass && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"password-alert\",\n          children: \"Passwords must match!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 75\n        }, this), params.method === 'register' && password.length < 8 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"password-alert\",\n          children: \"Passwords must contain at least 8 characters!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 74\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 23\n        }, this) : null, params.method === 'register' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Already have an account yet? \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/account/login\",\n            className: \"login-link\",\n            children: \"Click here to log in!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Already have an account yet? \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/account/register\",\n            className: \"login-link\",\n            children: \"Click here to register!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"EguCLAWOry4LRb+ABcz6XdW4TrI=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/soondubu/Desktop/FitnessTrackr/src/components/Login.js"],"names":["React","useState","Link","useParams","useHistory","register","login","Login","fetchUserRoutines","setToken","setUserName","setUserId","username","setUsername","password","setPassword","verPass","setVerPass","error","setError","params","history","method","e","preventDefault","response","callApi","url","body","token","localStorage","setItem","user","id","push","console","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { useParams, useHistory } from 'react-router';\nimport { register, login } from '../util/index';\n\nconst Login = ({ fetchUserRoutines, setToken, setUserName, setUserId }) => {\n    const [ username, setUsername ] = useState('');\n    const [ password, setPassword ] = useState('');\n    const [ verPass, setVerPass ] = useState('');\n    const [ error, setError] = useState('');\n    const params = useParams();\n    const history = useHistory();\n\n    return <> \n        <div className='form-container'>\n            <div className='login-header'>            \n                {\n                params.method === 'register' \n                    ? <h3 className='header'>Register a new account</h3> \n                    : <h3 className='header'>Login to your account</h3>\n                }           \n            </div>\n            <form className='login-form' onSubmit={async (e) =>{\n                e.preventDefault();\n                try{ \n                    const response = await callApi ({\n                        url: `/users/${params.method}`,\n                        method: 'POST',\n                        body: { username, password }                        \n                    });\n                    if (response.error) {\n                        setError(response.error);\n                    };\n                    if (response.token) {\n                        const { token } = response;\n                        setToken(token);\n                        localStorage.setItem('token', token);\n                        const user = await callApi({ url: '/users/me', token})\n                        if (user) {\n                            setUserName(user.username);\n                            localStorage.setItem('username', user.username);\n                            setUserId(user.id)\n                            localStorage.setItem('userId', user.id)\n                            await fetchUserRoutines();\n                            setUsername('');\n                            setPassword('');\n                            history.push('/user/routines');\n                        }\n                    }\n                } catch(error) {\n                    console.error(error);\n                };                \n            }}>\n                <fieldset className='input-fieldset'>\n                    <label>User name</label>\n                    <input \n                        className='input-field' \n                        type='text'\n                        name='Login Name'\n                        placeholder='enter your user name' \n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                </fieldset>\n\n                <fieldset className='input-fieldset'>\n                    <label>Password</label>\n                    <input \n                        className='input-field' \n                        type='password' \n                        name='Password'\n                        placeholder='password (min length 6 chars)' \n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </fieldset>\n\n                {\n                params.method === 'register' \n                    ? <fieldset className='input-fieldset'>\n                        <label>Verify Password</label>\n                            <input \n                                className='input-field' \n                                type='password' \n                                name='Verify Password'\n                                placeholder='re-enter your password' \n                                onChange={(e) => setVerPass(e.target.value)}\n                            />\n                    </fieldset>\n                    : ''\n                }\n                \n                {\n                params.method === 'register' \n                    ? <button className='login-button' type=\"submit\" disabled={!password || !username || password.length < 8 || password !== verPass }>\n                        Register\n                    </button> \n                    : <button className='login-button' type=\"submit\" disabled={!password || !username || password.length < 8 }>\n                        Login\n                    </button>\n                }\n                { params.method === 'register' && password !== verPass && <span className='password-alert'>Passwords must match!</span> }\n\n                { params.method === 'register' && password.length < 8 && <span className='password-alert'>Passwords must contain at least 8 characters!</span> }\n\n                { error\n                    ? <span>{error}</span>\n                    : null\n                }\n\n                {\n                params.method === 'register' \n                ? <>\n                    <span>Already have an account yet? </span>\n                    <Link to=\"/account/login\" className='login-link'>\n                        Click here to log in!\n                    </Link>\n                </> \n                : <>\n                    <span>Already have an account yet? </span>\n                    <Link to=\"/account/register\" className='login-link'>\n                        Click here to register!\n                    </Link>\n                </>\n                }\n            </form>            \n    </div>\n</>\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}